from memory_scope.enumeration.language_enum import LanguageEnum


UPDATE_INSIGHT_SYSTEM_PROMPT = {
    LanguageEnum.CN: """
从下面的句子中提取出给定类别的用户资料信息，并判断与已有信息是否矛盾，若矛盾以新信息为准。整合已有信息和新信息并输出。若已有信息为空则直接输出提取的
信息。若无法提取出给定类别的用户资料信息则输出“无”。
请一步步思考，并按如下格式输出:
思考: 思考的依据和过程，150字以内。
用户资料: <信息或无>, 一定加<>
""",
    LanguageEnum.EN: """
"""
}

UPDATE_INSIGHT_FEW_SHOT_PROMPT = {
    LanguageEnum.CN: """
示例1:
句子：因为昨天成都下大雨，用户全身都被淋湿了。
句子：用户关心明天成都的天气预报。
类别：用户所在地区
已有信息：用户所在地区: 
思考：从第一句句子可以得出用户在成都。第二句句子没有直接透露用户所在地信息，但与第一句句子用户在成都的信息吻合。已有信息为空，直接输出得出的信息。
用户资料：<成都>

示例2:
句子：用户最近养好了肠胃。
句子：用户关注中医养生。
类别：用户健康状况
已有信息：用户健康状况: 肠胃不好，高血压
思考：从第一句句子可以得出用户最近养好了肠胃，与已有信息矛盾，以新信息为准。第二句句子与用户健康状况无关。整合已有信息和新信息得到用户健康状况是肠胃健康，高血压。
用户资料：<肠胃健康，高血压>

示例3:
句子：用户刚刚毕业，第一份工作是银行前台。
句子：用户的理想工作是职业游戏选手。
类别：用户职业
已有信息：用户职业：在招商银行工作
思考：整合已有信息和第一句句子的信息可以得出用户的现在的职业是招商银行前台。第二句句子说明了用户的理想工作但并不是现在的职业。
用户资料：<招商银行前台>

示例4:
句子：用户大学期间接触过优化算法的研究。
类别：用户学习专业
已有信息：用户学习专业：与人工智能相关
思考：从句子可以得出用户大学学习的专业与优化算法相关，这与已有信息（用户学习专业与人工智能相关）不矛盾，整合可以得出用户大学学习的专业与人工智能和优化算法相关。
用户资料：<与人工智能和优化算法相关>

示例5:
句子：用户单身。
句子：用户受到一名18岁男生的追求，但不想接受又不想伤害他。
句子：用户喜欢成熟且情绪稳定的男生。
类别：用户情感状况
已有信息：用户情感状况：有男朋友
思考：从第一句句子可以得出用户现在单身，与已有信息矛盾，以新信息为准。从第二句句子得出用户受到一名18岁男生的追求但并不喜欢他。第三句话表达了用户理想的伴侣类型但与用户
情感状况无关。整合得出用户情感状况为单身，受到一名18岁男生的追求但并不喜欢他。
用户资料：<单身，受到一名18岁男生的追求但并不喜欢他。>
""",
    LanguageEnum.EN: """
"""
}

UPDATE_INSIGHT_USER_QUERY_PROMPT = {
    LanguageEnum.CN: """
{user_query}
类别：{insight_key}
已有信息：{insight_key_value}
""",
    LanguageEnum.EN: """
"""
}
